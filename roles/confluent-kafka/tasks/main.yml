---

- import_tasks: register_vars.yml

- name: Create opt/app directories
  file:
    path: /opt/app/confluent
    state: directory
  file:
    path: /opt/app/java
    state: directory
  file:
    path: /opt/app/service/zookeeper
    state: directory
  file:
    path: /opt/app/confluent/data/zoo-dataDir
    state: directory
  file:
    path: /tmp/kafka-10-logs
    state: directory

- name: download-confluent-kafka
  shell: 'sudo curl -O http://packages.confluent.io/archive/6.2/confluent-community-6.2.0.tar.gz'
  args:
    chdir: /opt/app/confluent


- name: extract files from confluent.tar
  shell: 'sudo tar xzf confluent-community-6.2.0.tar.gz'
  args:
    chdir: /opt/app/confluent

- name: download-java
  shell: 'sudo curl -O https://download.java.net/java/GA/jdk11/13/GPL/openjdk-11.0.1_linux-x64_bin.tar.gz'
  args:
    chdir: /opt/app/java


- name: extract files from java.tar
  shell: 'sudo tar xzf openjdk-11.0.1_linux-x64_bin.tar.gz'
  args:
    chdir: /opt/app/java

- name: copy paste zoo props
  copy:
    src: /opt/app/confluent/confluent-6.2.0/etc/kafka/zookeeper.properties
    dest: /opt/app/service/zookeeper/zookeeper.properties



- name: Configure zookeeper.properties
  template:
    src: zookeeper.properties.j2
    dest: /opt/app/service/zookeeper/zookeeper.properties

- name: Configure bashrc
  copy:
    src: bashrc
    dest: ~/.bashrc

- name: sourcing bashrc
  shell: 'source ~/.bashrc'

- name: Creates zookeeper cluster directories
  file: 
    path: /opt/app/confluent/data/zoo-dataDir
    state: directory

- name: Configure zookeeper myid
  template:
    src: myid.j2
    dest: /opt/app/confluent/data/zoo-dataDir/myid

- name: Install zookeeper as service
  copy: 
    src: zookeeper_ansible.service
    dest: /etc/systemd/system/
    owner: root 
    mode: 644
  notify:
    - restart zookeeper service


- name: Install zookeeper.run
  copy:
    src: zookeeper.run.sh
    dest: /opt/app/service/zookeeper/
    owner: root
    mode: 644
  notify:
    - restart zookeeper service


- name: Install zookeeper.stop
  copy:
    src: zookeeper.stop.sh
    dest: /opt/app/service/zookeeper/
    owner: root
    mode: 644
  notify:
    - restart zookeeper service



- name: enable zookeeper service on startup
  systemd: 
    name: zookeeper_ansible.service
    daemon_reload: yes
    enabled: yes
    masked: no
